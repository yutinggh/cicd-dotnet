name: Road to Integration

on:
  pull_request:
    branches: 
      - 'integration*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore 

    - name: Check coding standards
      run: dotnet format --verify-no-changes

    - name: Test UnitTests
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory coverage/UnitTests Tests/UnitTests/UnitTests.csproj

    - name: Test RegressionTests
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory coverage/RegressionTests Tests/RegressionTests/RegressionTests.csproj

    - name: Code Coverage Summary Report for UnitTests
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: 'coverage/UnitTests/**/coverage.cobertura.xml'
        badge: true
        format: 'markdown'
        output: 'both'

    - name: Code Coverage Summary Report for RegressionTests
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: 'coverage/RegressionTests/**/coverage.cobertura.xml'
        badge: true
        format: 'markdown'
        output: 'both'

    - name: Combine Coverage Summaries
      run: |
        echo "# Unit Tests Coverage" > combined-coverage-summary.md
        cat code-coverage-results.md >> combined-coverage-summary.md
        echo "\n# Regression Tests Coverage" >> combined-coverage-summary.md
        cat code-coverage-results.md >> combined-coverage-summary.md

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: combined-coverage-summary.md

    - name: Write to Job Summary
      run: cat combined-coverage-summary.md >> $GITHUB_STEP_SUMMARY


  build-reportgenerator:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory coverage 

    - name: Create code coverage report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:coverage/*/coverage.cobertura.xml -targetdir:CodeCoverage -reporttypes:'MarkdownSummaryGithub;Cobertura'

    - name: Write to Job Summary
      run: cat CodeCoverage/SummaryGithub.md >> $GITHUB_STEP_SUMMARY

  build-test-xunit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore 
    
    - name: Test
      run: dotnet test --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx"

    - name: Test Report
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()    # run this step even if previous step failed
      with:
        check_name: MS XUnit Tests Results                 
        files: Tests/UnitTests/TestResults/test-results.trx    # Path to test results
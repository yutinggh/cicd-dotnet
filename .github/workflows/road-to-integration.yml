name: Road to Integration

on:
  pull_request:
    branches: 
      - 'integration*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: dotnet restore "Test/UnitTests/UnitTests.csproj"

    - name: Build
      run: dotnet build --no-restore "Test/UnitTests/UnitTests.csproj"

    - name: Check coding standards
      run: dotnet format --verify-no-changes

    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory coverage "Test/UnitTests/UnitTests.csproj"

    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: 'coverage/*/coverage.cobertura.xml'
        badge: true
        format: 'markdown'
        output: 'both'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

    - name: Write to Job Summary
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY


  build-reportgenerator:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: dotnet restore "Test/UnitTests/UnitTests.csproj"

    - name: Build
      run: dotnet build --no-restore "Test/UnitTests/UnitTests.csproj"

    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory coverage "Test/UnitTests/UnitTests.csproj"

    - name: Create code coverage report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:coverage/*/coverage.cobertura.xml -targetdir:CodeCoverage -reporttypes:'MarkdownSummaryGithub;Cobertura'

    - name: Write to Job Summary
      run: cat CodeCoverage/SummaryGithub.md >> $GITHUB_STEP_SUMMARY

  build-test-xunit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: dotnet restore "Test/UnitTests/UnitTests.csproj"

    - name: Build
      run: dotnet build --no-restore "Test/UnitTests/UnitTests.csproj"
    
    - name: Test
      run: dotnet test --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx" "Test/UnitTests/UnitTests.csproj"

    - name: Test Report
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()    # run this step even if previous step failed
      with:
        check_name: MS XUnit Tests Results                 
        files: Test/UnitTests/TestResults/test-results.trx    # Path to test results

    # - name: Clean up old coverage files
    #   run: rm -rf coverage/*

    # - name: Run unit tests with coverage
    #   run: dotnet test ./Tests/UnitTests --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage/unit

    # - name: Code Coverage Report
    #   uses: irongut/CodeCoverageSummary@v1.3.0
    #   with:
    #     filename: coverage/unit/**/coverage.cobertura.xml
    #     badge: true
    #     format: markdown
    #     hide_branch_rate: false
    #     hide_complexity: false
    #     indicators: true
    #     output: both
    #     thresholds: '60 80'

    # - name: Add Coverage PR Comment
    #   uses: marocchino/sticky-pull-request-comment@v2
    #   if: github.event_name == 'pull_request'
    #   with:
    #     recreate: true
    #     path: code-coverage-results.md